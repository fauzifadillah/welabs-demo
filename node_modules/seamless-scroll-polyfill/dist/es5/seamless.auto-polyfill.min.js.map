{"version":3,"file":"seamless.auto-polyfill.min.js","sources":["../../src/common.ts","../../src/Element.scroll.ts","../../src/Element.scrollBy.ts","../../src/Element.scrollIntoView.ts","../../src/Element.scrollTo.ts","../../src/Window.scroll.ts","../../src/Window.scrollBy.ts","../../src/Window.scrollTo.ts","../../src/index.ts","../../src/auto-polyfill.ts"],"sourcesContent":["const ease = (k: number) => {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n};\n\nconst DURATION = 500;\n\nexport const isScrollBehaviorSupported = (): boolean => \"scrollBehavior\" in document.documentElement.style;\n\nexport const original = {\n    _elementScroll: undefined as typeof Element.prototype.scroll | undefined,\n    get elementScroll() {\n        return (this._elementScroll ||=\n            HTMLElement.prototype.scroll ||\n            HTMLElement.prototype.scrollTo ||\n            function (this: Element, x: number, y: number) {\n                this.scrollLeft = x;\n                this.scrollTop = y;\n            });\n    },\n\n    _elementScrollIntoView: undefined as typeof Element.prototype.scrollIntoView | undefined,\n    get elementScrollIntoView() {\n        return (this._elementScrollIntoView ||= HTMLElement.prototype.scrollIntoView);\n    },\n\n    _windowScroll: undefined as typeof window.scroll | undefined,\n    get windowScroll() {\n        return (this._windowScroll ||= window.scroll || window.scrollTo);\n    },\n};\n\ntype Prototype = typeof HTMLElement.prototype | typeof SVGElement.prototype | typeof Element.prototype;\n\nexport const modifyPrototypes = (modification: (prototype: Prototype) => void): void => {\n    const prototypes = [HTMLElement.prototype, SVGElement.prototype, Element.prototype];\n    prototypes.forEach((prototype) => modification(prototype));\n};\n\nexport interface IAnimationOptions {\n    duration?: number;\n    timingFunc?: (k: number) => number;\n}\n\nexport interface IScrollToOptions extends ScrollToOptions, IAnimationOptions {}\n\nexport interface IScrollIntoViewOptions extends ScrollIntoViewOptions, IAnimationOptions {}\n\nexport interface IContext extends IAnimationOptions {\n    timeStamp: number;\n    startX: number;\n    startY: number;\n    targetX: number;\n    targetY: number;\n    rafId: number;\n    method: (x: number, y: number) => void;\n    callback: () => void;\n}\n\nexport const now = (): number => window.performance?.now?.() ?? Date.now();\n\nexport const step = (context: IContext): void => {\n    const currentTime = now();\n\n    const elapsed = (currentTime - context.timeStamp) / (context.duration || DURATION);\n    if (elapsed > 1) {\n        context.method(context.targetX, context.targetY);\n        context.callback();\n        return;\n    }\n    const value = (context.timingFunc || ease)(elapsed);\n\n    const currentX = context.startX + (context.targetX - context.startX) * value;\n    const currentY = context.startY + (context.targetY - context.startY) * value;\n\n    context.method(currentX, currentY);\n\n    context.rafId = requestAnimationFrame(() => {\n        step(context);\n    });\n};\n\n// https://drafts.csswg.org/cssom-view/#normalize-non-finite-values\nexport const nonFinite = (value: number): number => {\n    if (!isFinite(value)) {\n        return 0;\n    }\n    return Number(value);\n};\n\nexport const isObject = (value: unknown): value is Record<string, unknown> => {\n    const type = typeof value;\n    return value !== null && (type === \"object\" || type === \"function\");\n};\n","import {\n    IAnimationOptions,\n    IContext,\n    IScrollToOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    modifyPrototypes,\n    nonFinite,\n    now,\n    original,\n    step,\n} from \"./common.js\";\n\nexport const elementScroll = (element: Element, options: IScrollToOptions): void => {\n    const originalBoundFunc = original.elementScroll.bind(element);\n\n    if (options.left === undefined && options.top === undefined) {\n        return;\n    }\n\n    const startX = element.scrollLeft;\n    const startY = element.scrollTop;\n\n    const targetX = nonFinite(options.left ?? startX);\n    const targetY = nonFinite(options.top ?? startY);\n\n    if (options.behavior !== \"smooth\") {\n        return originalBoundFunc(targetX, targetY);\n    }\n\n    const removeEventListener = () => {\n        window.removeEventListener(\"wheel\", cancelScroll);\n        window.removeEventListener(\"touchmove\", cancelScroll);\n    };\n\n    const context: IContext = {\n        timeStamp: now(),\n        duration: options.duration,\n        startX,\n        startY,\n        targetX,\n        targetY,\n        rafId: 0,\n        method: originalBoundFunc,\n        timingFunc: options.timingFunc,\n        callback: removeEventListener,\n    };\n\n    const cancelScroll = () => {\n        cancelAnimationFrame(context.rafId);\n        removeEventListener();\n    };\n\n    window.addEventListener(\"wheel\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n    window.addEventListener(\"touchmove\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n\n    step(context);\n};\n\nexport const elementScrollPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.elementScroll;\n\n    modifyPrototypes(\n        (prototype) =>\n            (prototype.scroll = function scroll() {\n                if (arguments.length === 1) {\n                    const scrollOptions = arguments[0];\n                    if (!isObject(scrollOptions)) {\n                        throw new TypeError(\n                            \"Failed to execute 'scroll' on 'Element': parameter 1 ('options') is not an object.\",\n                        );\n                    }\n\n                    return elementScroll(this, { ...scrollOptions, ...animationOptions });\n                }\n\n                return originalFunc.apply(this, arguments as any);\n            }),\n    );\n};\n","import {\n    IAnimationOptions,\n    IScrollToOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    modifyPrototypes,\n    nonFinite,\n} from \"./common.js\";\nimport { elementScroll } from \"./Element.scroll.js\";\n\nexport const elementScrollBy = (element: Element, options: IScrollToOptions): void => {\n    const left = nonFinite(options.left || 0) + element.scrollLeft;\n    const top = nonFinite(options.top || 0) + element.scrollTop;\n\n    return elementScroll(element, { ...options, left, top });\n};\n\nexport const elementScrollByPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    modifyPrototypes(\n        (prototype) =>\n            (prototype.scrollBy = function scrollBy() {\n                if (arguments.length === 1) {\n                    const scrollByOptions = arguments[0];\n                    if (!isObject(scrollByOptions)) {\n                        throw new TypeError(\n                            \"Failed to execute 'scrollBy' on 'Element': parameter 1 ('options') is not an object.\",\n                        );\n                    }\n\n                    return elementScrollBy(this, { ...scrollByOptions, ...animationOptions });\n                }\n\n                const left = Number(arguments[0]);\n                const top = Number(arguments[1]);\n\n                return elementScrollBy(this, { left, top });\n            }),\n    );\n};\n","import {\n    IAnimationOptions,\n    IScrollIntoViewOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    modifyPrototypes,\n    original,\n} from \"./common.js\";\nimport { elementScroll } from \"./Element.scroll.js\";\n\nconst enum ScrollAlignment {\n    ToEdgeIfNeeded,\n    CenterAlways,\n    LeftOrTop,\n    RightOrBottom,\n}\n\nconst enum WritingMode {\n    HorizontalTb,\n    VerticalRl,\n    VerticalLr,\n    SidewaysRl,\n    SidewaysLr,\n}\n\n// https://drafts.csswg.org/css-writing-modes-4/#block-flow\nconst normalizeWritingMode = (writingMode: string): WritingMode => {\n    switch (writingMode) {\n        case \"horizontal-tb\":\n        case \"lr\":\n        case \"lr-tb\":\n        case \"rl\":\n        case \"rl-tb\":\n            return WritingMode.HorizontalTb;\n\n        case \"vertical-rl\":\n        case \"tb\":\n        case \"tb-rl\":\n            return WritingMode.VerticalRl;\n\n        case \"vertical-lr\":\n        case \"tb-lr\":\n            return WritingMode.VerticalLr;\n\n        case \"sideways-rl\":\n            return WritingMode.SidewaysRl;\n\n        case \"sideways-lr\":\n            return WritingMode.SidewaysLr;\n    }\n\n    return WritingMode.HorizontalTb;\n};\n\ntype Tuple2<T> = [T, T];\n\n// https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/dom/element.cc;l=1097-1189;drc=6a7533d4a1e9f2372223a9d912a9e53a6fa35ae0\nconst toPhysicalAlignment = (\n    options: ScrollIntoViewOptions,\n    writingMode: WritingMode,\n    isLTR: boolean,\n): Tuple2<ScrollAlignment> => {\n    let [xPos, yPos] = [options.block || \"start\", options.inline || \"nearest\"];\n\n    /**  0b{vertical}{horizontal}  0: normal, 1: reverse */\n    let layout = 0b00;\n\n    const enum OP {\n        ReverseHorizontal = 0b01,\n        ReverseVertical = 0b10,\n    }\n\n    /**\n     * WritingMode.VerticalLr: ↓→\n     * | 1 | 4 |   |\n     * | 2 | 5 |   |\n     * | 3 |   |   |\n     *\n     * RTL: ↑→\n     * | 3 |   |   |\n     * | 2 | 5 |   |\n     * | 1 | 4 |   |\n     */\n    if (!isLTR) {\n        layout ^= OP.ReverseVertical;\n    }\n\n    switch (writingMode) {\n        /**\n         * ↓→\n         * | 1 | 2 | 3 |\n         * | 4 | 5 |   |\n         * |   |   |   |\n         *\n         * RTL: ↓←\n         * | 3 | 2 | 1 |\n         * |   | 5 | 4 |\n         * |   |   |   |\n         */\n        case WritingMode.HorizontalTb:\n            // swap horizontal and vertical\n            layout = (layout >> 1) | ((layout & 1) << 1);\n            [xPos, yPos] = [yPos, xPos];\n            break;\n\n        /**\n         * ↓←\n         * |   | 4 | 1 |\n         * |   | 5 | 2 |\n         * |   |   | 3 |\n         *\n         * RTL: ↑←\n         * |   |   | 3 |\n         * |   | 5 | 2 |\n         * |   | 4 | 1 |\n         */\n        case WritingMode.VerticalRl:\n        case WritingMode.SidewaysRl:\n            //  reverse horizontal\n            layout ^= OP.ReverseHorizontal;\n            break;\n\n        /**\n         * ↑→\n         * | 3 |   |   |\n         * | 2 | 5 |   |\n         * | 1 | 4 |   |\n         *\n         * RTL: ↓→\n         * | 1 | 4 |   |\n         * | 2 | 5 |   |\n         * | 3 |   |   |\n         */\n        case WritingMode.SidewaysLr:\n            // reverse vertical\n            layout ^= OP.ReverseVertical;\n            break;\n    }\n\n    return [xPos, yPos].map((value, index) => {\n        switch (value) {\n            case \"center\":\n                return ScrollAlignment.CenterAlways;\n            case \"nearest\":\n                return ScrollAlignment.ToEdgeIfNeeded;\n\n            default: {\n                const reverse = (layout >> index) & 1;\n                return (value === \"start\") === !reverse ? ScrollAlignment.LeftOrTop : ScrollAlignment.RightOrBottom;\n            }\n        }\n    }) as Tuple2<ScrollAlignment>;\n};\n\n// code from stipsan/compute-scroll-into-view\n// https://github.com/stipsan/compute-scroll-into-view/blob/5396c6b78af5d0bbce11a7c4e93cc3146546fcd3/src/index.ts\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nconst alignNearest = (\n    scrollingEdgeStart: number,\n    scrollingEdgeEnd: number,\n    scrollingSize: number,\n    scrollingBorderStart: number,\n    scrollingBorderEnd: number,\n    elementEdgeStart: number,\n    elementEdgeEnd: number,\n    elementSize: number,\n): number => {\n    /**\n     * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n     *\n     *          ┌──┐\n     *        ┏━│━━│━┓\n     *          │  │\n     *        ┃ │  │ ┃        do nothing\n     *          │  │\n     *        ┗━│━━│━┛\n     *          └──┘\n     *\n     *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n     *\n     *    ┏ ━ ━ ━ ━ ┓\n     *   ┌───────────┐\n     *   │┃         ┃│        do nothing\n     *   └───────────┘\n     *    ┗ ━ ━ ━ ━ ┛\n     */\n    if (\n        (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd) ||\n        (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n    ) {\n        return 0;\n    }\n\n    /**\n     * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n     *\n     *          ┌──┐\n     *        ┏━│━━│━┓         ┏━┌━━┐━┓\n     *          └──┘             │  │\n     *  from  ┃      ┃     to  ┃ └──┘ ┃\n     *\n     *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n     *\n     * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n     *\n     *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n     *                           │  │\n     *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n     *          │  │             │  │\n     *        ┗━│━━│━┛         ┗━│━━│━┛\n     *          │  │             └──┘\n     *          │  │\n     *          └──┘\n     *\n     * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n     *\n     *       from                 to\n     *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n     *  ┌───┐                 ┌───┐\n     *  │ ┃ │       ┃         ┃   │     ┃\n     *  └───┘                 └───┘\n     *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n     *\n     * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n     *\n     *       from                 to\n     *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n     *        ┌───────────┐   ┌───────────┐\n     *    ┃   │     ┃     │   ┃         ┃ │\n     *        └───────────┘   └───────────┘\n     *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n     */\n    if (\n        (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n        (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n    ) {\n        return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n    }\n\n    /**\n     * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n     *\n     *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n     *\n     *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n     *          ┌──┐             │  │\n     *        ┗━│━━│━┛         ┗━└━━┘━┛\n     *          └──┘\n     *\n     * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n     *\n     *          ┌──┐\n     *          │  │\n     *          │  │             ┌──┐\n     *        ┏━│━━│━┓         ┏━│━━│━┓\n     *          │  │             │  │\n     *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n     *                           │  │\n     *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n     *\n     * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n     *\n     *           from                 to\n     *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n     *  ┌───────────┐           ┌───────────┐\n     *  │     ┃     │   ┃       │ ┃         ┃\n     *  └───────────┘           └───────────┘\n     *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n     *\n     * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n     *\n     *           from                 to\n     *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n     *                ┌───┐             ┌───┐\n     *        ┃       │ ┃ │       ┃     │   ┃\n     *                └───┘             └───┘\n     *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n     *\n     */\n    if (\n        (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n        (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n    ) {\n        return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n    }\n\n    return 0;\n};\n\nconst canOverflow = (overflow: string | null): boolean => {\n    return overflow !== \"visible\" && overflow !== \"clip\";\n};\n\nconst getFrameElement = (element: Element): Element | null => {\n    if (!element.ownerDocument || !element.ownerDocument.defaultView) {\n        return null;\n    }\n\n    try {\n        return element.ownerDocument.defaultView.frameElement;\n    } catch (e) {\n        return null;\n    }\n};\n\nconst isHiddenByFrame = (element: Element): boolean => {\n    const frame = getFrameElement(element);\n    if (!frame) {\n        return false;\n    }\n\n    return frame.clientHeight < element.scrollHeight || frame.clientWidth < element.scrollWidth;\n};\n\nconst isScrollable = (element: Element, computedStyle: CSSStyleDeclaration): boolean => {\n    if (element.clientHeight < element.scrollHeight || element.clientWidth < element.scrollWidth) {\n        return canOverflow(computedStyle.overflowY) || canOverflow(computedStyle.overflowX) || isHiddenByFrame(element);\n    }\n\n    return false;\n};\n\nconst parentElement = (element: Element): Element | null => {\n    const parentNode = element.parentNode;\n\n    if (parentNode !== null && parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        return (parentNode as ShadowRoot).host;\n    }\n\n    return parentNode as Element | null;\n};\n\nconst clamp = (value: number, width: number): number => {\n    if (value < -width) {\n        return -width;\n    }\n\n    if (value > width) {\n        return width;\n    }\n\n    return value;\n};\n\nconst isCSSPropertySupported = (property: string): boolean => property in document.documentElement.style;\n\nconst getSupportedScrollMarginProperty = (): string => {\n    // Webkit uses \"scroll-snap-margin\" https://bugs.webkit.org/show_bug.cgi?id=189265.\n    return [\"scroll-margin\", \"scroll-snap-margin\"].filter(isCSSPropertySupported)[0];\n};\n\nconst getElementScrollSnapArea = (element: Element, computedStyle: CSSStyleDeclaration) => {\n    const { top, right, bottom, left } = element.getBoundingClientRect();\n    const [scrollMarginTop, scrollMarginRight, scrollMarginBottom, scrollMarginLeft] = [\n        \"top\",\n        \"right\",\n        \"bottom\",\n        \"left\",\n    ].map((edge) => {\n        const scrollProperty = getSupportedScrollMarginProperty();\n        const value = computedStyle.getPropertyValue(`${scrollProperty}-${edge}`);\n        return parseInt(value, 10) || 0;\n    });\n\n    return [top - scrollMarginTop, right + scrollMarginRight, bottom + scrollMarginBottom, left - scrollMarginLeft];\n};\n\nexport const elementScrollIntoView = (element: Element, options: IScrollIntoViewOptions): void => {\n    if (element.isConnected === false) {\n        return;\n    }\n\n    // On Chrome and Firefox, document.scrollingElement will return the <html> element.\n    // Safari, document.scrollingElement will return the <body> element.\n    // On Edge, document.scrollingElement will return the <body> element.\n    // IE11 does not support document.scrollingElement, but you can assume its <html>.\n    // Used to handle the top most element that can be scrolled\n    const scrollingElement = document.scrollingElement || document.documentElement;\n\n    // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n    const frames: Element[] = [];\n\n    const documentElementStyle = getComputedStyle(document.documentElement);\n\n    for (let cursor = parentElement(element); cursor !== null; cursor = parentElement(cursor)) {\n        // Stop when we reach the viewport\n        if (cursor === scrollingElement) {\n            frames.push(cursor);\n            break;\n        }\n\n        const cursorStyle = getComputedStyle(cursor);\n\n        // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n        if (\n            cursor === document.body &&\n            isScrollable(cursor, cursorStyle) &&\n            !isScrollable(document.documentElement, documentElementStyle)\n        ) {\n            continue;\n        }\n\n        // Now we check if the element is scrollable,\n        // this code only runs if the loop haven't already hit the viewport or a custom boundary\n        if (isScrollable(cursor, cursorStyle)) {\n            frames.push(cursor);\n        }\n\n        if (cursorStyle.position === \"fixed\") {\n            break;\n        }\n    }\n\n    // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n    // Browsers that don't support visualViewport\n    // will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n    // and viewport dimensions on window.innerWidth/Height\n    // https://www.quirksmode.org/mobile/viewports2.html\n    // https://bokand.github.io/viewport/index.html\n    const viewportWidth = window.visualViewport ? window.visualViewport.width : innerWidth;\n    const viewportHeight = window.visualViewport ? window.visualViewport.height : innerHeight;\n\n    // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n    const viewportX = window.scrollX || window.pageXOffset;\n    const viewportY = window.scrollY || window.pageYOffset;\n\n    const computedStyle = getComputedStyle(element);\n\n    const [targetTop, targetRight, targetBottom, targetLeft] = getElementScrollSnapArea(element, computedStyle);\n    const targetHeight = targetBottom - targetTop;\n    const targetWidth = targetRight - targetLeft;\n\n    const writingMode = normalizeWritingMode(\n        computedStyle.writingMode ||\n            computedStyle.getPropertyValue(\"-webkit-writing-mode\") ||\n            computedStyle.getPropertyValue(\"-ms-writing-mode\"),\n    );\n\n    const isLTR = computedStyle.direction !== \"rtl\";\n\n    const [alignX, alignY] = toPhysicalAlignment(options, writingMode, isLTR);\n\n    let targetBlock = (() => {\n        switch (alignY) {\n            case ScrollAlignment.CenterAlways:\n                return targetTop + targetHeight / 2;\n\n            case ScrollAlignment.LeftOrTop:\n            case ScrollAlignment.ToEdgeIfNeeded:\n                return targetTop;\n\n            case ScrollAlignment.RightOrBottom:\n                return targetBottom;\n        }\n    })();\n\n    let targetInline = (() => {\n        switch (alignX) {\n            case ScrollAlignment.CenterAlways:\n                return targetLeft + targetWidth / 2;\n\n            case ScrollAlignment.RightOrBottom:\n                return targetRight;\n\n            case ScrollAlignment.LeftOrTop:\n            case ScrollAlignment.ToEdgeIfNeeded:\n                return targetLeft;\n        }\n    })();\n\n    type IAction = () => void;\n\n    const actions: IAction[] = [];\n    frames.forEach((frame) => {\n        const { height, width, top, right, bottom, left } = frame.getBoundingClientRect();\n\n        const frameStyle = getComputedStyle(frame);\n        const borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n        const borderTop = parseInt(frameStyle.borderTopWidth, 10);\n        const borderRight = parseInt(frameStyle.borderRightWidth, 10);\n        const borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n\n        let blockScroll = 0;\n        let inlineScroll = 0;\n\n        // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them,\n        // but any Element might pass by here\n        // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n        const scrollbarWidth =\n            \"offsetWidth\" in frame\n                ? (frame as HTMLElement).offsetWidth - (frame as HTMLElement).clientWidth - borderLeft - borderRight\n                : 0;\n        const scrollbarHeight =\n            \"offsetHeight\" in frame\n                ? (frame as HTMLElement).offsetHeight - (frame as HTMLElement).clientHeight - borderTop - borderBottom\n                : 0;\n\n        if (scrollingElement === frame) {\n            // Handle viewport logic (document.documentElement or document.body)\n\n            switch (alignY) {\n                case ScrollAlignment.LeftOrTop: {\n                    blockScroll = targetBlock;\n                    break;\n                }\n                case ScrollAlignment.RightOrBottom: {\n                    blockScroll = targetBlock - viewportHeight;\n                    break;\n                }\n                case ScrollAlignment.CenterAlways: {\n                    blockScroll = targetBlock - viewportHeight / 2;\n                    break;\n                }\n                case ScrollAlignment.ToEdgeIfNeeded: {\n                    blockScroll = alignNearest(\n                        viewportY,\n                        viewportY + viewportHeight,\n                        viewportHeight,\n                        borderTop,\n                        borderBottom,\n                        viewportY + targetBlock,\n                        viewportY + targetBlock + targetHeight,\n                        targetHeight,\n                    );\n                    break;\n                }\n            }\n\n            switch (alignX) {\n                case ScrollAlignment.LeftOrTop: {\n                    inlineScroll = targetInline;\n                    break;\n                }\n                case ScrollAlignment.RightOrBottom: {\n                    inlineScroll = targetInline - viewportWidth;\n                    break;\n                }\n                case ScrollAlignment.CenterAlways: {\n                    inlineScroll = targetInline - viewportWidth / 2;\n                    break;\n                }\n                case ScrollAlignment.ToEdgeIfNeeded: {\n                    inlineScroll = alignNearest(\n                        viewportX,\n                        viewportX + viewportWidth,\n                        viewportWidth,\n                        borderLeft,\n                        borderRight,\n                        viewportX + targetInline,\n                        viewportX + targetInline + targetWidth,\n                        targetWidth,\n                    );\n                    break;\n                }\n            }\n\n            blockScroll += viewportY;\n            inlineScroll += viewportX;\n        } else {\n            // Handle each scrolling frame that might exist between the target and the viewport\n\n            switch (alignY) {\n                case ScrollAlignment.LeftOrTop: {\n                    blockScroll = targetBlock - top - borderTop;\n                    break;\n                }\n                case ScrollAlignment.RightOrBottom: {\n                    blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n                    break;\n                }\n                case ScrollAlignment.CenterAlways: {\n                    blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2;\n                    break;\n                }\n                case ScrollAlignment.ToEdgeIfNeeded: {\n                    blockScroll = alignNearest(\n                        top,\n                        bottom,\n                        height,\n                        borderTop,\n                        borderBottom + scrollbarHeight,\n                        targetBlock,\n                        targetBlock + targetHeight,\n                        targetHeight,\n                    );\n                    break;\n                }\n            }\n\n            switch (alignX) {\n                case ScrollAlignment.LeftOrTop: {\n                    inlineScroll = targetInline - left - borderLeft;\n                    break;\n                }\n                case ScrollAlignment.RightOrBottom: {\n                    inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n                    break;\n                }\n                case ScrollAlignment.CenterAlways: {\n                    inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2;\n                    break;\n                }\n                case ScrollAlignment.ToEdgeIfNeeded: {\n                    inlineScroll = alignNearest(\n                        left,\n                        right,\n                        width,\n                        borderLeft,\n                        borderRight + scrollbarWidth,\n                        targetInline,\n                        targetInline + targetWidth,\n                        targetWidth,\n                    );\n                    break;\n                }\n            }\n\n            const { scrollLeft, scrollTop } = frame;\n            // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n            blockScroll = clamp(scrollTop + blockScroll, frame.scrollHeight - height + scrollbarHeight);\n            inlineScroll = clamp(scrollLeft + inlineScroll, frame.scrollWidth - width + scrollbarWidth);\n\n            // Cache the offset so that parent frames can scroll this into view correctly\n            targetBlock += scrollTop - blockScroll;\n            targetInline += scrollLeft - inlineScroll;\n        }\n\n        actions.push(() => elementScroll(frame, { ...options, top: blockScroll, left: inlineScroll }));\n    });\n\n    actions.forEach((run) => run());\n};\n\nexport const elementScrollIntoViewPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.elementScrollIntoView;\n\n    modifyPrototypes(\n        (prototype) =>\n            (prototype.scrollIntoView = function scrollIntoView(): void {\n                const scrollIntoViewOptions = arguments[0];\n\n                if (arguments.length === 1 && isObject(scrollIntoViewOptions)) {\n                    return elementScrollIntoView(this, { ...scrollIntoViewOptions, ...animationOptions });\n                }\n\n                return originalFunc.apply(this, arguments as any);\n            }),\n    );\n};\n","import { IAnimationOptions, isObject, isScrollBehaviorSupported, modifyPrototypes, original } from \"./common.js\";\nimport { elementScroll } from \"./Element.scroll.js\";\n\nexport { elementScroll as elementScrollTo } from \"./Element.scroll.js\";\n\nexport const elementScrollToPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.elementScroll;\n\n    modifyPrototypes(\n        (prototype) =>\n            (prototype.scrollTo = function scrollTo() {\n                if (arguments.length === 1) {\n                    const scrollToOptions = arguments[0];\n                    if (!isObject(scrollToOptions)) {\n                        throw new TypeError(\n                            \"Failed to execute 'scrollTo' on 'Element': parameter 1 ('options') is not an object.\",\n                        );\n                    }\n\n                    const left = Number(scrollToOptions.left);\n                    const top = Number(scrollToOptions.top);\n\n                    return elementScroll(this, { ...scrollToOptions, left, top, ...animationOptions });\n                }\n\n                return originalFunc.apply(this, arguments as any);\n            }),\n    );\n};\n","import {\n    IAnimationOptions,\n    IContext,\n    IScrollToOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    nonFinite,\n    now,\n    original,\n    step,\n} from \"./common.js\";\n\nexport const windowScroll = (options: IScrollToOptions): void => {\n    const originalBoundFunc = original.windowScroll.bind(window);\n\n    if (options.left === undefined && options.top === undefined) {\n        return;\n    }\n\n    const startX = window.scrollX || window.pageXOffset;\n    const startY = window.scrollY || window.pageYOffset;\n\n    const targetX = nonFinite(options.left ?? startX);\n    const targetY = nonFinite(options.top ?? startY);\n\n    if (options.behavior !== \"smooth\") {\n        return originalBoundFunc(targetX, targetY);\n    }\n\n    const removeEventListener = () => {\n        window.removeEventListener(\"wheel\", cancelScroll);\n        window.removeEventListener(\"touchmove\", cancelScroll);\n    };\n\n    const context: IContext = {\n        timeStamp: now(),\n        duration: options.duration,\n        startX,\n        startY,\n        targetX,\n        targetY,\n        rafId: 0,\n        method: originalBoundFunc,\n        timingFunc: options.timingFunc,\n        callback: removeEventListener,\n    };\n\n    const cancelScroll = () => {\n        cancelAnimationFrame(context.rafId);\n        removeEventListener();\n    };\n\n    window.addEventListener(\"wheel\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n    window.addEventListener(\"touchmove\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n\n    step(context);\n};\n\nexport const windowScrollPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.windowScroll;\n\n    window.scroll = function scroll() {\n        if (arguments.length === 1) {\n            const scrollOptions = arguments[0];\n            if (!isObject(scrollOptions)) {\n                throw new TypeError(\n                    \"Failed to execute 'scroll' on 'Window': parameter 1 ('options') is not an object.\",\n                );\n            }\n\n            return windowScroll({ ...scrollOptions, ...animationOptions });\n        }\n\n        return originalFunc.apply(this, arguments as any);\n    };\n};\n","import {\n    IAnimationOptions,\n    IScrollToOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    nonFinite,\n    original,\n} from \"./common.js\";\nimport { windowScroll } from \"./Window.scroll.js\";\n\nexport const windowScrollBy = (options: IScrollToOptions): void => {\n    const left = nonFinite(options.left || 0) + (window.scrollX || window.pageXOffset);\n    const top = nonFinite(options.top || 0) + (window.scrollY || window.pageYOffset);\n\n    if (options.behavior !== \"smooth\") {\n        return original.windowScroll.call(window, left, top);\n    }\n\n    return windowScroll({ ...options, left, top });\n};\n\nexport const windowScrollByPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    window.scrollBy = function scrollBy() {\n        if (arguments.length === 1) {\n            const scrollByOptions = arguments[0];\n            if (!isObject(scrollByOptions)) {\n                throw new TypeError(\n                    \"Failed to execute 'scrollBy' on 'Window': parameter 1 ('options') is not an object.\",\n                );\n            }\n\n            return windowScrollBy({ ...scrollByOptions, ...animationOptions });\n        }\n\n        const left = Number(arguments[0]);\n        const top = Number(arguments[1]);\n\n        return windowScrollBy({ left, top });\n    };\n};\n","import { IAnimationOptions, isObject, isScrollBehaviorSupported, original } from \"./common.js\";\nimport { windowScroll } from \"./Window.scroll.js\";\n\nexport { windowScroll as windowScrollTo } from \"./Window.scroll.js\";\n\nexport const windowScrollToPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.windowScroll;\n\n    window.scrollTo = function scrollTo() {\n        if (arguments.length === 1) {\n            const scrollToOptions = arguments[0];\n            if (!isObject(scrollToOptions)) {\n                throw new TypeError(\n                    \"Failed to execute 'scrollTo' on 'Window': parameter 1 ('options') is not an object.\",\n                );\n            }\n\n            const left = Number(scrollToOptions.left);\n            const top = Number(scrollToOptions.top);\n\n            return windowScroll({ ...scrollToOptions, left, top, ...animationOptions });\n        }\n\n        return originalFunc.apply(this, arguments as any);\n    };\n};\n","import { IAnimationOptions, isScrollBehaviorSupported } from \"./common.js\";\nimport { elementScrollPolyfill } from \"./Element.scroll.js\";\nimport { elementScrollByPolyfill } from \"./Element.scrollBy.js\";\nimport { elementScrollIntoViewPolyfill } from \"./Element.scrollIntoView.js\";\nimport { elementScrollToPolyfill } from \"./Element.scrollTo.js\";\nimport { windowScrollPolyfill } from \"./Window.scroll.js\";\nimport { windowScrollByPolyfill } from \"./Window.scrollBy.js\";\nimport { windowScrollToPolyfill } from \"./Window.scrollTo.js\";\n\nexport const polyfill = (options?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    windowScrollPolyfill(options);\n    windowScrollToPolyfill(options);\n    windowScrollByPolyfill(options);\n\n    elementScrollPolyfill(options);\n    elementScrollToPolyfill(options);\n    elementScrollByPolyfill(options);\n    elementScrollIntoViewPolyfill(options);\n};\n\nexport { elementScroll, elementScrollPolyfill } from \"./Element.scroll.js\";\nexport { elementScrollBy, elementScrollByPolyfill } from \"./Element.scrollBy.js\";\nexport { elementScrollIntoView, elementScrollIntoViewPolyfill } from \"./Element.scrollIntoView.js\";\nexport { elementScrollTo, elementScrollToPolyfill } from \"./Element.scrollTo.js\";\nexport { windowScroll, windowScrollPolyfill } from \"./Window.scroll.js\";\nexport { windowScrollBy, windowScrollByPolyfill } from \"./Window.scrollBy.js\";\nexport { windowScrollTo, windowScrollToPolyfill } from \"./Window.scrollTo.js\";\nexport { polyfill as seamless };\n","import { seamless } from \"./index.js\";\n\n((currentScript) => {\n    if (currentScript) {\n        let duration: number | undefined = ~~currentScript.dataset.duration;\n        duration = duration > 0 ? duration : undefined;\n\n        seamless({ duration });\n    }\n})(document.currentScript || document.querySelector(\"script[data-seamless]\"));\n"],"names":["ease","k","Math","cos","PI","isScrollBehaviorSupported","document","documentElement","style","original","_elementScroll","elementScroll","HTMLElement","prototype","scroll","scrollTo","x","y","scrollLeft","scrollTop","_elementScrollIntoView","elementScrollIntoView","scrollIntoView","_windowScroll","windowScroll","window","modifyPrototypes","modification","prototypes","SVGElement","Element","forEach","now","performance","Date","step","context","currentTime","elapsed","timeStamp","duration","method","targetX","targetY","callback","value","timingFunc","currentX","startX","currentY","startY","rafId","requestAnimationFrame","nonFinite","isFinite","isObject","type","element","options","originalBoundFunc","bind","left","top","behavior","removeEventListener","cancelScroll","cancelAnimationFrame","addEventListener","passive","once","elementScrollPolyfill","animationOptions","originalFunc","arguments","length","scrollOptions","TypeError","apply","elementScrollBy","elementScrollByPolyfill","scrollBy","scrollByOptions","normalizeWritingMode","writingMode","toPhysicalAlignment","isLTR","_b","__read","block","inline","xPos","yPos","layout","_a","map","index","reverse","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","canOverflow","overflow","getFrameElement","ownerDocument","defaultView","frameElement","e","isHiddenByFrame","frame","clientHeight","scrollHeight","clientWidth","scrollWidth","isScrollable","computedStyle","overflowY","overflowX","parentElement","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","clamp","width","isCSSPropertySupported","property","getSupportedScrollMarginProperty","filter","getElementScrollSnapArea","getBoundingClientRect","right","bottom","edge","scrollProperty","getPropertyValue","parseInt","scrollMarginTop","scrollMarginRight","scrollMarginBottom","scrollMarginLeft","isConnected","scrollingElement","frames","documentElementStyle","getComputedStyle","cursor","push","cursorStyle","body","position","viewportWidth","visualViewport","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","targetTop","targetRight","targetBottom","targetLeft","targetHeight","targetWidth","direction","alignX","alignY","targetBlock","targetInline","actions","frameStyle","borderLeft","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","run","elementScrollIntoViewPolyfill","scrollIntoViewOptions","elementScrollToPolyfill","scrollToOptions","top_1","windowScrollPolyfill","windowScrollBy","call","windowScrollByPolyfill","windowScrollToPolyfill","polyfill","currentScript","dataset","seamless","querySelector"],"mappings":"yXAAMA,CAAAA,CAAI,CAAG,SAACC,CAAD,EACT,MAAO,KAAO,EAAIC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,CAAUH,CAAnB,CAAX,CACV,EAIYI,CAAyB,CAAG,WAAe,MAAA,kBAAoBC,CAAAA,QAAQ,CAACC,eAAT,CAAyBC,KAAK,EAE7FC,CAAQ,CAAG,CACpBC,cAAc,OADM,CAEpB,GAAIC,CAAAA,aAAJ,GACI,MAAQ,MAAKD,cAAL,GAAA,KAAKA,cAAL,CACJE,WAAW,CAACC,SAAZ,CAAsBC,MAAtB,EACAF,WAAW,CAACC,SAAZ,CAAsBE,QADtB,EAEA,SAAyBC,CAAzB,CAAoCC,CAApC,EACI,KAAKC,UAAL,CAAkBF,EAClB,KAAKG,SAAL,CAAiBF,CACpB,CANG,CAOX,CAVmB,CAYpBG,sBAAsB,OAZF,CAapB,GAAIC,CAAAA,qBAAJ,GACI,MAAQ,MAAKD,sBAAL,GAAA,KAAKA,sBAAL,CAAgCR,WAAW,CAACC,SAAZ,CAAsBS,cAAtD,CACX,CAfmB,CAiBpBC,aAAa,OAjBO,CAkBpB,GAAIC,CAAAA,YAAJ,GACI,MAAQ,MAAKD,aAAL,GAAA,KAAKA,aAAL,CAAuBE,MAAM,CAACX,MAAP,EAAiBW,MAAM,CAACV,QAA/C,CACX,CApBmB,EAyBXW,CAAgB,CAAG,SAACC,CAAD,EAC5B,GAAMC,CAAAA,CAAU,CAAG,CAAChB,WAAW,CAACC,SAAb,CAAwBgB,UAAU,CAAChB,SAAnC,CAA8CiB,OAAO,CAACjB,SAAtD,CAAnB,CACAe,CAAU,CAACG,OAAX,CAAmB,SAAClB,CAAD,EAAe,MAAAc,CAAAA,CAAY,CAACd,CAAD,CAAW,CAAzD,CACH,EAsBYmB,CAAG,CAAG,0DAAcP,MAAM,CAACQ,kCAAaD,iDAAWE,IAAI,CAACF,GAAL,EAAU,EAE7DG,CAAI,CAAG,SAACC,CAAD,KACVC,CAAAA,CAAW,CAAGL,CAAG,GAEjBM,CAAO,CAAG,CAACD,CAAW,CAAGD,CAAO,CAACG,SAAvB,GAAqCH,CAAO,CAACI,QAAR,EA3DxC,GA2DG,EAChB,GAAc,CAAV,CAAAF,CAAJ,CAGI,MAFAF,CAAAA,CAAO,CAACK,MAAR,CAAeL,CAAO,CAACM,OAAvB,CAAgCN,CAAO,CAACO,OAAxC,CAEA,KADAP,CAAAA,CAAO,CAACQ,QAAR,EACA,IAEEC,CAAAA,CAAK,CAAG,CAACT,CAAO,CAACU,UAAR,EAAsB9C,CAAvB,EAA6BsC,CAA7B,EAERS,CAAQ,CAAGX,CAAO,CAACY,MAAR,CAAiB,CAACZ,CAAO,CAACM,OAAR,CAAkBN,CAAO,CAACY,MAA3B,EAAqCH,EACjEI,CAAQ,CAAGb,CAAO,CAACc,MAAR,CAAiB,CAACd,CAAO,CAACO,OAAR,CAAkBP,CAAO,CAACc,MAA3B,EAAqCL,EAEvET,CAAO,CAACK,MAAR,CAAeM,CAAf,CAAyBE,CAAzB,EAEAb,CAAO,CAACe,KAAR,CAAgBC,qBAAqB,CAAC,WAClCjB,CAAI,CAACC,CAAD,CACP,CAFoC,CAGxC,EAGYiB,CAAS,CAAG,SAACR,CAAD,QAChBS,CAAAA,QAAQ,CAACT,CAAD,GAGCA,EAFH,CAGd,EAEYU,CAAQ,CAAG,SAACV,CAAD,EACpB,GAAMW,CAAAA,CAAI,CAAG,MAAOX,CAAAA,CAApB,CACA,MAAiB,KAAV,GAAAA,CAAK,GAAuB,QAAT,GAAAW,CAAI,EAA0B,UAAT,GAAAA,CAAnC,CACf,oNC/EY7C,CAAa,CAAG,SAAC8C,CAAD,CAAmBC,CAAnB,UACnBC,CAAiB,CAAGlD,CAAQ,CAACE,aAAT,CAAuBiD,IAAvB,CAA4BH,CAA5B,EAE1B,GAAI,SAAAC,CAAO,CAACG,IAAR,EAA8B,SAAAH,CAAO,CAACI,GAA1C,KAIMd,CAAAA,CAAM,CAAGS,CAAO,CAACvC,UAJvB,CAKMgC,CAAM,CAAGO,CAAO,CAACtC,SALvB,CAOMuB,CAAO,CAAGW,CAAS,WAACK,CAAO,CAACG,oBAAQb,CAAjB,CAPzB,CAQML,CAAO,CAAGU,CAAS,WAACK,CAAO,CAACI,mBAAOZ,CAAhB,CARzB,CAUA,GAAyB,QAArB,GAAAQ,CAAO,CAACK,QAAZ,CACI,MAAOJ,CAAAA,CAAiB,CAACjB,CAAD,CAAUC,CAAV,CAAxB,CAXJ,GAcMqB,CAAAA,CAAmB,CAAG,WACxBvC,MAAM,CAACuC,mBAAP,CAA2B,OAA3B,CAAoCC,CAApC,EACAxC,MAAM,CAACuC,mBAAP,CAA2B,WAA3B,CAAwCC,CAAxC,CACH,CAjBD,CAmBM7B,CAAO,CAAa,CACtBG,SAAS,CAAEP,CAAG,EADQ,CAEtBQ,QAAQ,CAAEkB,CAAO,CAAClB,QAFI,CAGtBQ,MAAM,EAHgB,CAItBE,MAAM,EAJgB,CAKtBR,OAAO,EALe,CAMtBC,OAAO,EANe,CAOtBQ,KAAK,CAAE,CAPe,CAQtBV,MAAM,CAAEkB,CARc,CAStBb,UAAU,CAAEY,CAAO,CAACZ,UATE,CAUtBF,QAAQ,CAAEoB,CAVY,CAnB1B,CAgCMC,CAAY,CAAG,WACjBC,oBAAoB,CAAC9B,CAAO,CAACe,KAAT,EACpBa,CAAmB,EACtB,CAnCD,CAqCAvC,MAAM,CAAC0C,gBAAP,CAAwB,OAAxB,CAAiCF,CAAjC,CAA+C,CAC3CG,OAAO,GADoC,CAE3CC,IAAI,GAFuC,CAA/C,CArCA,CAyCA5C,MAAM,CAAC0C,gBAAP,CAAwB,WAAxB,CAAqCF,CAArC,CAAmD,CAC/CG,OAAO,GADwC,CAE/CC,IAAI,GAF2C,CAAnD,CAzCA,CA8CAlC,CAAI,CAACC,CAAD,CA9CJ,CA+CH,EAEYkC,CAAqB,CAAG,SAACC,CAAD,EACjC,IAAIlE,CAAyB,EAA7B,EAIA,GAAMmE,CAAAA,CAAY,CAAG/D,CAAQ,CAACE,aAA9B,CAEAe,CAAgB,CACZ,SAACb,CAAD,EACI,MAACA,CAAAA,CAAS,CAACC,MAAV,CAAmB,WAChB,GAAyB,CAArB,GAAA2D,SAAS,CAACC,MAAd,CAA4B,CACxB,GAAMC,CAAAA,CAAa,CAAGF,SAAS,CAAC,CAAD,CAA/B,CACA,GAAI,CAAClB,CAAQ,CAACoB,CAAD,CAAb,CACI,KAAM,IAAIC,CAAAA,SAAJ,CACF,oFADE,CAAN,CAKJ,MAAOjE,CAAAA,CAAa,CAAC,IAAD,QAAYgE,GAAkBJ,EAA9B,CACvB,CAED,MAAOC,CAAAA,CAAY,CAACK,KAAb,CAAmB,IAAnB,CAAyBJ,SAAzB,CACV,CAAC,CAfM,CANhB,CAuBH,EC/EYK,CAAe,CAAG,SAACrB,CAAD,CAAmBC,CAAnB,KACrBG,CAAAA,CAAI,CAAGR,CAAS,CAACK,CAAO,CAACG,IAAR,EAAgB,CAAjB,CAAT,CAA+BJ,CAAO,CAACvC,WAC9C4C,CAAG,CAAGT,CAAS,CAACK,CAAO,CAACI,GAAR,EAAe,CAAhB,CAAT,CAA8BL,CAAO,CAACtC,UAElD,MAAOR,CAAAA,CAAa,CAAC8C,CAAD,QAAeC,IAASG,IAAI,GAAEC,GAAG,IAAjC,CACvB,EAEYiB,CAAuB,CAAG,SAACR,CAAD,EAC/BlE,CAAyB,IAI7BqB,CAAgB,CACZ,SAACb,CAAD,EACI,MAACA,CAAAA,CAAS,CAACmE,QAAV,CAAqB,WAClB,GAAyB,CAArB,GAAAP,SAAS,CAACC,MAAd,CAA4B,CACxB,GAAMO,CAAAA,CAAe,CAAGR,SAAS,CAAC,CAAD,CAAjC,CACA,GAAI,CAAClB,CAAQ,CAAC0B,CAAD,CAAb,CACI,KAAM,IAAIL,CAAAA,SAAJ,CACF,sFADE,CAAN,CAKJ,MAAOE,CAAAA,CAAe,CAAC,IAAD,QAAYG,GAAoBV,EAAhC,CACzB,IAEKV,CAAAA,CAAI,EAAUY,SAAS,CAAC,CAAD,EACvBX,CAAG,EAAUW,SAAS,CAAC,CAAD,EAE5B,MAAOK,CAAAA,CAAe,CAAC,IAAD,CAAO,CAAEjB,IAAI,EAAN,CAAQC,GAAG,EAAX,CAAP,CACzB,CAAC,CAlBM,CAoBnB,EChBKoB,CAAoB,CAAG,SAACC,CAAD,QAEhB,kBADDA,GAEC,OAFDA,GAGC,UAHDA,GAIC,OAJDA,GAKC,UALDA,IAQC,gBARDA,GASC,OATDA,GAUC,UAVDA,IAaC,gBAbDA,GAcC,UAdDA,IAiBC,gBAjBDA,IAoBC,gBApBDA,KAyBX,EAKKC,CAAmB,CAAG,SACxB1B,CADwB,CAExByB,CAFwB,CAGxBE,CAHwB,QAKpBC,EAAAC,EAAe,CAAC7B,CAAO,CAAC8B,KAAR,EAAiB,OAAlB,CAA2B9B,CAAO,CAAC+B,MAAR,EAAkB,SAA7C,KAAdC,CAAI,MAAEC,CAAI,MAGXC,CAAM,CAAG,EA0Eb,MAxDKP,CAAAA,CAwDL,GAvDIO,CAAM,GAuDV,GAAA,GApDQT,CAoDR,EAtCQS,CAAM,CAAIA,CAAM,EAAI,CAAX,CAAiB,CAAU,CAAT,CAAAA,CAAD,GAAgB,CAsClD,CArCQC,EAAAN,EAAe,CAACI,CAAD,CAAOD,CAAP,IAqCvB,CArCSA,CAAI,KAqCb,CArCeC,CAAI,KAqCnB,GAAA,GApDQR,CAoDR,GAAA,GApDQA,CAoDR,CApBQS,CAAM,GAoBd,EAAA,GApDQT,CAoDR,CAJQS,CAAM,GAId,QAAO,CAACF,CAAD,CAAOC,CAAP,EAAaG,GAAb,CAAiB,SAACjD,CAAD,CAAQkD,CAAR,EACpB,OAAQlD,CAAR,EACI,IAAK,QAAL,CACI,QAAA,CACJ,IAAK,SAAL,CACI,QAAA,CAEJ,QAAS,CACL,GAAMmD,CAAAA,CAAO,CAAuB,CAApB,CAACJ,CAAM,EAAIG,CAA3B,CACA,MAAkB,OAAV,GAAAlD,CAAD,EAAwB,CAACmD,CAAzB,EAAA,EACV,CATL,CAWH,CAZM,CAaV,EAaKC,CAAY,CAAG,SACjBC,CADiB,CAEjBC,CAFiB,CAGjBC,CAHiB,CAIjBC,CAJiB,CAKjBC,CALiB,CAMjBC,CANiB,CAOjBC,CAPiB,CAQjBC,CARiB,QA8BZF,CAAAA,CAAgB,CAAGL,CAAnB,EAAyCM,CAAc,CAAGL,CAA3D,EACCI,CAAgB,CAAGL,CAAnB,EAAyCM,CAAc,CAAGL,EAEpD,EA2CNI,CAAgB,EAAIL,CAApB,EAA0CO,CAAW,EAAIL,CAA1D,EACCI,CAAc,EAAIL,CAAlB,EAAsCM,CAAW,EAAIL,EAE/CG,CAAgB,CAAGL,CAAnB,CAAwCG,EA4C9CG,CAAc,CAAGL,CAAjB,EAAqCM,CAAW,CAAGL,CAApD,EACCG,CAAgB,CAAGL,CAAnB,EAAyCO,CAAW,CAAGL,EAEjDI,CAAc,CAAGL,CAAjB,CAAoCG,EAGxC,CACV,EAEKI,CAAW,CAAG,SAACC,CAAD,EAChB,MAAoB,SAAb,GAAAA,CAAQ,EAA+B,MAAb,GAAAA,CACpC,EAEKC,CAAe,CAAG,SAACnD,CAAD,EACpB,GAAI,CAACA,CAAO,CAACoD,aAAT,EAA0B,CAACpD,CAAO,CAACoD,aAAR,CAAsBC,WAArD,CACI,MAAO,KAAP,CAGJ,GAAI,CACA,MAAOrD,CAAAA,CAAO,CAACoD,aAAR,CAAsBC,WAAtB,CAAkCC,YAC5C,CAAC,MAAOC,CAAP,CAAU,CACR,MAAO,KACV,CACJ,EAEKC,CAAe,CAAG,SAACxD,CAAD,EACpB,GAAMyD,CAAAA,CAAK,CAAGN,CAAe,CAACnD,CAAD,CAA7B,SACKyD,IAIEA,CAAK,CAACC,YAAN,CAAqB1D,CAAO,CAAC2D,YAA7B,EAA6CF,CAAK,CAACG,WAAN,CAAoB5D,CAAO,CAAC6D,YACnF,EAEKC,CAAY,CAAG,SAAC9D,CAAD,CAAmB+D,CAAnB,WACb/D,CAAO,CAAC0D,YAAR,CAAuB1D,CAAO,CAAC2D,YAA/B,EAA+C3D,CAAO,CAAC4D,WAAR,CAAsB5D,CAAO,CAAC6D,eACtEZ,CAAW,CAACc,CAAa,CAACC,SAAf,CAAX,EAAwCf,CAAW,CAACc,CAAa,CAACE,SAAf,CAAnD,EAAgFT,CAAe,CAACxD,CAAD,EAI7G,EAEKkE,CAAa,CAAG,SAAClE,CAAD,EAClB,GAAMmE,CAAAA,CAAU,CAAGnE,CAAO,CAACmE,UAA3B,OAEmB,KAAf,GAAAA,CAAU,EAAaA,CAAU,CAACC,QAAX,GAAwBC,IAAI,CAACC,uBAC5CH,CAAyB,CAACI,KAG/BJ,CACV,EAEKK,CAAK,CAAG,SAACpF,CAAD,CAAgBqF,CAAhB,QACNrF,CAAAA,CAAK,CAAG,CAACqF,EACF,CAACA,EAGRrF,CAAK,CAAGqF,EACDA,EAGJrF,CACV,EAEKsF,CAAsB,CAAG,SAACC,CAAD,EAA+B,MAAAA,CAAAA,CAAQ,GAAI9H,CAAAA,QAAQ,CAACC,eAAT,CAAyBC,KAAK,EAElG6H,CAAgC,CAAG,WAErC,MAAO,CAAC,eAAD,CAAkB,oBAAlB,EAAwCC,MAAxC,CAA+CH,CAA/C,EAAuE,CAAvE,CACV,EAEKI,CAAwB,CAAG,SAAC9E,CAAD,CAAmB+D,CAAnB,KACvB3B,CAAAA,EAA+BpC,CAAO,CAAC+E,qBAAR,GAA7B1E,CAAG,OAAE2E,CAAK,SAAEC,CAAM,UAAE7E,CAAI,QAC1ByB,EAAAC,EAA6E,CAC/E,KAD+E,CAE/E,OAF+E,CAG/E,QAH+E,CAI/E,MAJ+E,EAKjFO,GALiF,CAK7E,SAAC6C,CAAD,KACIC,CAAAA,CAAc,CAAGP,CAAgC,GACjDxF,CAAK,CAAG2E,CAAa,CAACqB,gBAAd,CAAkCD,CAAc,IAAd,CAAkBD,CAApD,EACd,MAAOG,CAAAA,QAAQ,CAACjG,CAAD,CAAQ,EAAR,CAAR,EAAuB,CACjC,CATkF,KAA5EkG,CAAe,MAAEC,CAAiB,MAAEC,CAAkB,MAAEC,CAAgB,MAW/E,MAAO,CAACpF,CAAG,CAAGiF,CAAP,CAAwBN,CAAK,CAAGO,CAAhC,CAAmDN,CAAM,CAAGO,CAA5D,CAAgFpF,CAAI,CAAGqF,CAAvF,CACV,EAEY7H,CAAqB,CAAG,SAACoC,CAAD,CAAmBC,CAAnB,EACjC,GAAI,KAAAD,CAAO,CAAC0F,WAAZ,EAgBA,OAPMC,CAAAA,CAAgB,CAAG9I,QAAQ,CAAC8I,gBAAT,EAA6B9I,QAAQ,CAACC,eAO/D,CAJM8I,CAAM,CAAc,EAI1B,CAFMC,CAAoB,CAAGC,gBAAgB,CAACjJ,QAAQ,CAACC,eAAV,CAE7C,CAASiJ,CAAM,CAAG7B,CAAa,CAAClE,CAAD,CAA/B,CAAqD,IAAX,GAAA+F,CAA1C,CAA2DA,CAAM,CAAG7B,CAAa,CAAC6B,CAAD,CAAjF,CAA2F,CAEvF,GAAIA,CAAM,GAAKJ,CAAf,CAAiC,CAC7BC,CAAM,CAACI,IAAP,CAAYD,CAAZ,CAD6B,CAE7B,KACH,CAED,GAAME,CAAAA,CAAW,CAAGH,gBAAgB,CAACC,CAAD,CAApC,CAGA,IACIA,CAAM,GAAKlJ,QAAQ,CAACqJ,IAApB,GACApC,CAAY,CAACiC,CAAD,CAASE,CAAT,CADZ,EAECnC,CAAY,CAACjH,QAAQ,CAACC,eAAV,CAA2B+I,CAA3B,CAHjB,IAUI/B,CAAY,CAACiC,CAAD,CAASE,CAAT,CAVhB,EAWIL,CAAM,CAACI,IAAP,CAAYD,CAAZ,CAXJ,CAc6B,OAAzB,GAAAE,CAAW,CAACE,QAdhB,EAeI,KAEP,CA3CD,GAmDMC,CAAAA,CAAa,CAAGpI,MAAM,CAACqI,cAAP,CAAwBrI,MAAM,CAACqI,cAAP,CAAsB5B,KAA9C,CAAsD6B,UAnD5E,CAoDMC,CAAc,CAAGvI,MAAM,CAACqI,cAAP,CAAwBrI,MAAM,CAACqI,cAAP,CAAsBG,MAA9C,CAAuDC,WApD9E,CAuDMC,CAAS,CAAG1I,MAAM,CAAC2I,OAAP,EAAkB3I,MAAM,CAAC4I,WAvD3C,CAwDMC,CAAS,CAAG7I,MAAM,CAAC8I,OAAP,EAAkB9I,MAAM,CAAC+I,WAxD3C,CA0DMhD,CAAa,CAAG+B,gBAAgB,CAAC9F,CAAD,CA1DtC,CA4DMoC,EAAAN,EAAqDgD,CAAwB,CAAC9E,CAAD,CAAU+D,CAAV,IA5DnF,CA4DOiD,CAAS,KA5DhB,CA4DkBC,CAAW,KA5D7B,CA4D+BC,CAAY,KA5D3C,CA4D6CC,CAAU,KA5DvD,CA6DMC,CAAY,CAAGF,CAAY,CAAGF,CA7DpC,CA8DMK,CAAW,CAAGJ,CAAW,CAAGE,CA9DlC,CAgEMzF,CAAW,CAAGD,CAAoB,CACpCsC,CAAa,CAACrC,WAAd,EACIqC,CAAa,CAACqB,gBAAd,CAA+B,sBAA/B,CADJ,EAEIrB,CAAa,CAACqB,gBAAd,CAA+B,kBAA/B,CAHgC,CAhExC,CAsEMxD,CAAK,CAA+B,KAA5B,GAAAmC,CAAa,CAACuD,SAtE5B,CAwEMzF,EAAAC,EAAmBH,CAAmB,CAAC1B,CAAD,CAAUyB,CAAV,CAAuBE,CAAvB,IAxE5C,CAwEO2F,CAAM,KAxEb,CAwEeC,CAAM,KAxErB,CA0EIC,CAAW,CAAI,sBACPD,EAEOR,CAAS,CAAGI,CAAY,CAAG,MAFlCI,OAAAA,EAMOR,MANPQ,EASON,QAElB,CAZiB,EA1ElB,CAwFIQ,CAAY,CAAI,sBACRH,EAEOJ,CAAU,CAAGE,CAAW,CAAG,MAFlCE,EAKON,MALPM,OAAAA,EASOJ,QAElB,CAZkB,EAxFnB,CAwGMQ,CAAO,CAAc,EAxG3B,CAyGA/B,CAAM,CAACtH,OAAP,CAAe,SAACmF,CAAD,KACLrB,CAAAA,EAA8CqB,CAAK,CAACsB,qBAAN,GAA5CyB,CAAM,UAAE/B,CAAK,SAAEpE,CAAG,OAAE2E,CAAK,SAAEC,CAAM,UAAE7E,CAAI,QAEzCwH,CAAU,CAAG9B,gBAAgB,CAACrC,CAAD,EAC7BoE,CAAU,CAAGxC,QAAQ,CAACuC,CAAU,CAACE,eAAZ,CAA6B,EAA7B,EACrBC,CAAS,CAAG1C,QAAQ,CAACuC,CAAU,CAACI,cAAZ,CAA4B,EAA5B,EACpBC,CAAW,CAAG5C,QAAQ,CAACuC,CAAU,CAACM,gBAAZ,CAA8B,EAA9B,EACtBC,CAAY,CAAG9C,QAAQ,CAACuC,CAAU,CAACQ,iBAAZ,CAA+B,EAA/B,EAEzBC,CAAW,CAAG,EACdC,CAAY,CAAG,EAKbC,CAAc,CAChB,eAAiB9E,CAAAA,CAAjB,CACOA,CAAqB,CAAC+E,WAAtB,CAAqC/E,CAAqB,CAACG,WAA3D,CAAyEiE,CAAzE,CAAsFI,CAD7F,CAEM,EACJQ,CAAe,CACjB,gBAAkBhF,CAAAA,CAAlB,CACOA,CAAqB,CAACiF,YAAtB,CAAsCjF,CAAqB,CAACC,YAA5D,CAA2EqE,CAA3E,CAAuFI,CAD9F,CAEM,EAEV,GAAIxC,CAAgB,GAAKlC,CAAzB,CAAgC,CAG5B,OAAQ+D,CAAR,EACI,MAAA,CAAgC,CAC5Ba,CAAW,CAAGZ,CADc,CAE5B,KACH,CACD,MAAA,CAAoC,CAChCY,CAAW,CAAGZ,CAAW,CAAGlB,CADI,CAEhC,KACH,CACD,MAAA,CAAmC,CAC/B8B,CAAW,CAAGZ,CAAW,CAAGlB,CAAc,CAAG,CADd,CAE/B,KACH,CACD,MAAA,CAAqC,CACjC8B,CAAW,CAAG7F,CAAY,CACtBqE,CADsB,CAEtBA,CAAS,CAAGN,CAFU,CAGtBA,CAHsB,CAItBwB,CAJsB,CAKtBI,CALsB,CAMtBtB,CAAS,CAAGY,CANU,CAOtBZ,CAAS,CAAGY,CAAZ,CAA0BL,CAPJ,CAQtBA,CARsB,CADO,CAWjC,KACH,CAzBL,CA4BA,OAAQG,CAAR,EACI,MAAA,CAAgC,CAC5Be,CAAY,CAAGZ,CADa,CAE5B,KACH,CACD,MAAA,CAAoC,CAChCY,CAAY,CAAGZ,CAAY,CAAGtB,CADE,CAEhC,KACH,CACD,MAAA,CAAmC,CAC/BkC,CAAY,CAAGZ,CAAY,CAAGtB,CAAa,CAAG,CADf,CAE/B,KACH,CACD,MAAA,CAAqC,CACjCkC,CAAY,CAAG9F,CAAY,CACvBkE,CADuB,CAEvBA,CAAS,CAAGN,CAFW,CAGvBA,CAHuB,CAIvByB,CAJuB,CAKvBI,CALuB,CAMvBvB,CAAS,CAAGgB,CANW,CAOvBhB,CAAS,CAAGgB,CAAZ,CAA2BL,CAPJ,CAQvBA,CARuB,CADM,CAWjC,KACH,CAzBL,CA4BAgB,CAAW,EAAIxB,CA3Da,CA4D5ByB,CAAY,EAAI5B,CACnB,CA7DD,IA6DO,CAGH,OAAQc,CAAR,EACI,MAAA,CAAgC,CAC5Ba,CAAW,CAAGZ,CAAW,CAAGpH,CAAd,CAAoB0H,CADN,CAE5B,KACH,CACD,MAAA,CAAoC,CAChCM,CAAW,CAAGZ,CAAW,CAAGxC,CAAd,CAAuBkD,CAAvB,CAAsCM,CADpB,CAEhC,KACH,CACD,MAAA,CAAmC,CAC/BJ,CAAW,CAAGZ,CAAW,EAAIpH,CAAG,CAAGmG,CAAM,CAAG,CAAnB,CAAX,CAAmCiC,CAAe,CAAG,CADpC,CAE/B,KACH,CACD,MAAA,CAAqC,CACjCJ,CAAW,CAAG7F,CAAY,CACtBnC,CADsB,CAEtB4E,CAFsB,CAGtBuB,CAHsB,CAItBuB,CAJsB,CAKtBI,CAAY,CAAGM,CALO,CAMtBhB,CANsB,CAOtBA,CAAW,CAAGL,CAPQ,CAQtBA,CARsB,CADO,CAWjC,KACH,CAzBL,CA4BA,OAAQG,CAAR,EACI,MAAA,CAAgC,CAC5Be,CAAY,CAAGZ,CAAY,CAAGtH,CAAf,CAAsByH,CADT,CAE5B,KACH,CACD,MAAA,CAAoC,CAChCS,CAAY,CAAGZ,CAAY,CAAG1C,CAAf,CAAuBiD,CAAvB,CAAqCM,CADpB,CAEhC,KACH,CACD,MAAA,CAAmC,CAC/BD,CAAY,CAAGZ,CAAY,EAAItH,CAAI,CAAGqE,CAAK,CAAG,CAAnB,CAAZ,CAAoC8D,CAAc,CAAG,CADrC,CAE/B,KACH,CACD,MAAA,CAAqC,CACjCD,CAAY,CAAG9F,CAAY,CACvBpC,CADuB,CAEvB4E,CAFuB,CAGvBP,CAHuB,CAIvBoD,CAJuB,CAKvBI,CAAW,CAAGM,CALS,CAMvBb,CANuB,CAOvBA,CAAY,CAAGL,CAPQ,CAQvBA,CARuB,CADM,CAWjC,KACH,CAzBL,CA4BQ,GAAA5J,CAAAA,CAAU,CAAgBgG,CAAK,WAA/B,CAAY/F,CAAS,CAAK+F,CAAK,UAA/B,CAER4E,CAAW,CAAG7D,CAAK,CAAC9G,CAAS,CAAG2K,CAAb,CAA0B5E,CAAK,CAACE,YAAN,CAAqB6C,CAArB,CAA8BiC,CAAxD,CA7DhB,CA8DHH,CAAY,CAAG9D,CAAK,CAAC/G,CAAU,CAAG6K,CAAd,CAA4B7E,CAAK,CAACI,WAAN,CAAoBY,CAApB,CAA4B8D,CAAxD,CA9DjB,CAiEHd,CAAW,EAAI/J,CAAS,CAAG2K,CAjExB,CAkEHX,CAAY,EAAIjK,CAAU,CAAG6K,CAChC,CAEDX,CAAO,CAAC3B,IAAR,CAAa,WAAM,MAAA9I,CAAAA,CAAa,CAACuG,CAAD,QAAaxD,IAASI,GAAG,CAAEgI,EAAajI,IAAI,CAAEkI,GAA9C,CAA6D,CAA7F,CACH,CA3JD,CAzGA,CAsQAX,CAAO,CAACrJ,OAAR,CAAgB,SAACqK,CAAD,EAAS,MAAAA,CAAAA,CAAG,EAAE,CAA9B,CAtQA,CAuQH,EAEYC,CAA6B,CAAG,SAAC9H,CAAD,EACzC,IAAIlE,CAAyB,EAA7B,EAIA,GAAMmE,CAAAA,CAAY,CAAG/D,CAAQ,CAACY,qBAA9B,CAEAK,CAAgB,CACZ,SAACb,CAAD,EACI,MAACA,CAAAA,CAAS,CAACS,cAAV,CAA2B,WACxB,GAAMgL,CAAAA,CAAqB,CAAG7H,SAAS,CAAC,CAAD,CAAvC,OAEyB,EAArB,GAAAA,SAAS,CAACC,MAAV,EAA0BnB,CAAQ,CAAC+I,CAAD,EAC3BjL,CAAqB,CAAC,IAAD,QAAYiL,GAA0B/H,EAAtC,EAGzBC,CAAY,CAACK,KAAb,CAAmB,IAAnB,CAAyBJ,SAAzB,CACV,CAAC,CAVM,CANhB,CAkBH,EC/oBY8H,CAAuB,CAAG,SAAChI,CAAD,EACnC,IAAIlE,CAAyB,EAA7B,EAIA,GAAMmE,CAAAA,CAAY,CAAG/D,CAAQ,CAACE,aAA9B,CAEAe,CAAgB,CACZ,SAACb,CAAD,EACI,MAACA,CAAAA,CAAS,CAACE,QAAV,CAAqB,WAClB,GAAyB,CAArB,GAAA0D,SAAS,CAACC,MAAd,CAA4B,CACxB,GAAM8H,CAAAA,CAAe,CAAG/H,SAAS,CAAC,CAAD,CAAjC,CACA,GAAI,CAAClB,CAAQ,CAACiJ,CAAD,CAAb,CACI,KAAM,IAAI5H,CAAAA,SAAJ,CACF,sFADE,CAAN,CAHoB,GAQlBf,CAAAA,CAAI,EAAU2I,CAAe,CAAC3I,IARZ,CASlB4I,CAAG,EAAUD,CAAe,CAAC1I,GATX,CAWxB,MAAOnD,CAAAA,CAAa,CAAC,IAAD,UAAY6L,IAAiB3I,IAAI,GAAEC,GAAG,KAAKS,EAA3C,CACvB,CAED,MAAOC,CAAAA,CAAY,CAACK,KAAb,CAAmB,IAAnB,CAAyBJ,SAAzB,CACV,CAAC,CAlBM,CANhB,CA0BH,ECpBYjD,CAAY,CAAG,SAACkC,CAAD,UAClBC,CAAiB,CAAGlD,CAAQ,CAACe,YAAT,CAAsBoC,IAAtB,CAA2BnC,MAA3B,EAE1B,GAAI,SAAAiC,CAAO,CAACG,IAAR,EAA8B,SAAAH,CAAO,CAACI,GAA1C,KAIMd,CAAAA,CAAM,CAAGvB,MAAM,CAAC2I,OAAP,EAAkB3I,MAAM,CAAC4I,WAJxC,CAKMnH,CAAM,CAAGzB,MAAM,CAAC8I,OAAP,EAAkB9I,MAAM,CAAC+I,WALxC,CAOM9H,CAAO,CAAGW,CAAS,WAACK,CAAO,CAACG,oBAAQb,CAAjB,CAPzB,CAQML,CAAO,CAAGU,CAAS,WAACK,CAAO,CAACI,mBAAOZ,CAAhB,CARzB,CAUA,GAAyB,QAArB,GAAAQ,CAAO,CAACK,QAAZ,CACI,MAAOJ,CAAAA,CAAiB,CAACjB,CAAD,CAAUC,CAAV,CAAxB,CAXJ,GAcMqB,CAAAA,CAAmB,CAAG,WACxBvC,MAAM,CAACuC,mBAAP,CAA2B,OAA3B,CAAoCC,CAApC,EACAxC,MAAM,CAACuC,mBAAP,CAA2B,WAA3B,CAAwCC,CAAxC,CACH,CAjBD,CAmBM7B,CAAO,CAAa,CACtBG,SAAS,CAAEP,CAAG,EADQ,CAEtBQ,QAAQ,CAAEkB,CAAO,CAAClB,QAFI,CAGtBQ,MAAM,EAHgB,CAItBE,MAAM,EAJgB,CAKtBR,OAAO,EALe,CAMtBC,OAAO,EANe,CAOtBQ,KAAK,CAAE,CAPe,CAQtBV,MAAM,CAAEkB,CARc,CAStBb,UAAU,CAAEY,CAAO,CAACZ,UATE,CAUtBF,QAAQ,CAAEoB,CAVY,CAnB1B,CAgCMC,CAAY,CAAG,WACjBC,oBAAoB,CAAC9B,CAAO,CAACe,KAAT,EACpBa,CAAmB,EACtB,CAnCD,CAqCAvC,MAAM,CAAC0C,gBAAP,CAAwB,OAAxB,CAAiCF,CAAjC,CAA+C,CAC3CG,OAAO,GADoC,CAE3CC,IAAI,GAFuC,CAA/C,CArCA,CAyCA5C,MAAM,CAAC0C,gBAAP,CAAwB,WAAxB,CAAqCF,CAArC,CAAmD,CAC/CG,OAAO,GADwC,CAE/CC,IAAI,GAF2C,CAAnD,CAzCA,CA8CAlC,CAAI,CAACC,CAAD,CA9CJ,CA+CH,EAEYsK,CAAoB,CAAG,SAACnI,CAAD,EAChC,IAAIlE,CAAyB,EAA7B,EAIA,GAAMmE,CAAAA,CAAY,CAAG/D,CAAQ,CAACe,YAA9B,CAEAC,MAAM,CAACX,MAAP,CAAgB,WACZ,GAAyB,CAArB,GAAA2D,SAAS,CAACC,MAAd,CAA4B,CACxB,GAAMC,CAAAA,CAAa,CAAGF,SAAS,CAAC,CAAD,CAA/B,CACA,GAAI,CAAClB,CAAQ,CAACoB,CAAD,CAAb,CACI,KAAM,IAAIC,CAAAA,SAAJ,CACF,mFADE,CAAN,CAKJ,MAAOpD,CAAAA,CAAY,QAAMmD,GAAkBJ,EAAxB,CACtB,CAED,MAAOC,CAAAA,CAAY,CAACK,KAAb,CAAmB,IAAnB,CAAyBJ,SAAzB,CACV,CAnBD,CAoBH,EC3EYkI,CAAc,CAAG,SAACjJ,CAAD,KACpBG,CAAAA,CAAI,CAAGR,CAAS,CAACK,CAAO,CAACG,IAAR,EAAgB,CAAjB,CAAT,EAAgCpC,MAAM,CAAC2I,OAAP,EAAkB3I,MAAM,CAAC4I,WAAzD,EACPvG,CAAG,CAAGT,CAAS,CAACK,CAAO,CAACI,GAAR,EAAe,CAAhB,CAAT,EAA+BrC,MAAM,CAAC8I,OAAP,EAAkB9I,MAAM,CAAC+I,WAAxD,QAEa,QAArB,GAAA9G,CAAO,CAACK,SAILvC,CAAY,QAAMkC,IAASG,IAAI,GAAEC,GAAG,IAAxB,EAHRrD,CAAQ,CAACe,YAAT,CAAsBoL,IAAtB,CAA2BnL,MAA3B,CAAmCoC,CAAnC,CAAyCC,CAAzC,CAId,EAEY+I,CAAsB,CAAG,SAACtI,CAAD,EAC9BlE,CAAyB,KAI7BoB,MAAM,CAACuD,QAAP,CAAkB,WACd,GAAyB,CAArB,GAAAP,SAAS,CAACC,MAAd,CAA4B,CACxB,GAAMO,CAAAA,CAAe,CAAGR,SAAS,CAAC,CAAD,CAAjC,CACA,GAAI,CAAClB,CAAQ,CAAC0B,CAAD,CAAb,CACI,KAAM,IAAIL,CAAAA,SAAJ,CACF,qFADE,CAAN,CAKJ,MAAO+H,CAAAA,CAAc,QAAM1H,GAAoBV,EAA1B,CACxB,IAEKV,CAAAA,CAAI,EAAUY,SAAS,CAAC,CAAD,EACvBX,CAAG,EAAUW,SAAS,CAAC,CAAD,EAE5B,MAAOkI,CAAAA,CAAc,CAAC,CAAE9I,IAAI,EAAN,CAAQC,GAAG,EAAX,CAAD,CACxB,EACJ,ECtCYgJ,CAAsB,CAAG,SAACvI,CAAD,EAClC,IAAIlE,CAAyB,EAA7B,EAIA,GAAMmE,CAAAA,CAAY,CAAG/D,CAAQ,CAACe,YAA9B,CAEAC,MAAM,CAACV,QAAP,CAAkB,WACd,GAAyB,CAArB,GAAA0D,SAAS,CAACC,MAAd,CAA4B,CACxB,GAAM8H,CAAAA,CAAe,CAAG/H,SAAS,CAAC,CAAD,CAAjC,CACA,GAAI,CAAClB,CAAQ,CAACiJ,CAAD,CAAb,CACI,KAAM,IAAI5H,CAAAA,SAAJ,CACF,qFADE,CAAN,CAHoB,GAQlBf,CAAAA,CAAI,EAAU2I,CAAe,CAAC3I,IARZ,CASlB4I,CAAG,EAAUD,CAAe,CAAC1I,GATX,CAWxB,MAAOtC,CAAAA,CAAY,UAAMgL,IAAiB3I,IAAI,GAAEC,GAAG,KAAKS,EAArC,CACtB,CAED,MAAOC,CAAAA,CAAY,CAACK,KAAb,CAAmB,IAAnB,CAAyBJ,SAAzB,CACV,CAtBD,CAuBH,ECpBYsI,CAAQ,CAAG,SAACrJ,CAAD,EAChBrD,CAAyB,KAI7BqM,CAAoB,CAAChJ,CAAD,EACpBoJ,CAAsB,CAACpJ,CAAD,EACtBmJ,CAAsB,CAACnJ,CAAD,EAEtBY,CAAqB,CAACZ,CAAD,EACrB6I,CAAuB,CAAC7I,CAAD,EACvBqB,CAAuB,CAACrB,CAAD,EACvB2I,CAA6B,CAAC3I,CAAD,EAChC,ECpBD,CAAC,SAACsJ,CAAD,EACG,GAAIA,CAAJ,CAAmB,CACf,GAAIxK,CAAAA,CAAQ,CAAuB,CAAC,CAACwK,CAAa,CAACC,OAAd,CAAsBzK,QAA3D,CACAA,CAAQ,CAAc,CAAX,CAAAA,CAAQ,CAAOA,CAAP,OAFJ,CAIf0K,CAAQ,CAAC,CAAE1K,QAAQ,EAAV,CAAD,CACX,CACJ,CAPD,EAOGlC,QAAQ,CAAC0M,aAAT,EAA0B1M,QAAQ,CAAC6M,aAAT,CAAuB,uBAAvB,CAP7B"}